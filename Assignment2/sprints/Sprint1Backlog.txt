//Sprint 1 Backlog.  
June 8 to June 13


User Stories from Product Backlog that we will address in this sprint:
a) As a user, I can run a shell program that I can interact with.
b) As a user, I can input commands to the shell to perform different tasks.
c) As a user, I can look at the history of commands I entered in the shell.
d) As a user, I can exit the program upon command.
e) As a user, if I enter a command incorrectly, I can see an error message with the correct method to use the command
f) As a user, I can create a directory that I can go through and create files in.
g) As a user, I can display the contents of the directory I'm currently on.
h) As a user, I can choose a file and look at it's contents.
i) As a user, I can take written text and save it in a file for later use.
j) As a user, I can take a file, append content to it and save it.
k) As a user, I can display the manual to a command I don't understand.
l) As a user, I can see any output of a command that I entered.

Specific tasks to be accomplished:
a-1. (Shell) Add a JShell class that will create user interaction
b-1. (CommandInterpreter) Add a CommandInterpreter class that will take commands and process them
c-1. (Session) Store commands entered to a container so they can be retrieved later
c-2. (Shell) Save commands entered in shell to the container in session
c-3. (Session) Make container and methods to access them static because the one session should be used among all other classes
c-4. (CommandInterpreter) Process history call and call it accordingly
d-1. (Shell) Create a condition that checks for exit prompt to exit program
e-1. (CommandInterpreter) Check input entered and process it for correct formatting
f-1. (Directory) Create a directory class to create/deal with the properties of a directory
g-1. (Directory) Create a method to loop through and display a directory's contents
h-1. (File) Create a file class to create/deal with the properties of a file
h-2. (File) Create a method to return a file's contents
i-1. (File) Create a method to overwrite text in a file
i-2. (File) Create file with text stored in it
j-1. (File) Create a method to append content to the current file
k-1. Create directory and files where man pages are stored
k-2. (CommandInterpreter) Create method to get man page when man cmd is called
l-1. (File, Directory) Return output based on command
l-2. (Shell) Display output to console for user

These tasks are assigned as follows:

User: Gisho
Tasks: c-1, c-2, k-1, k-2

User: John
Tasks: a-1, b-1, d-1, l-2

User: Dhrumil
Tasks: f-1, g-1, h-1, h-2, i-1, i-2, j-1, l-1

User: Adnan
Tasks: c-3, c-4, d-1, e-1